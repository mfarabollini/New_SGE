/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JEtiquetasViewer.java
 *
 * Created on 26/05/2012, 22:57:04
 */
package sge.vista;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.ChangeEvent;
import sge.vista.GenericoTableModel;

/**
 *
 * @author Propietario
 */
public class JEtiquetasViewer extends javax.swing.JInternalFrame {
    private JEtiquetasPresenter presenter;
    private Date fechaBusqueda;
    /** Creates new form JEtiquetasViewer */
    public JEtiquetasViewer() {
        initComponents();
        String[] cabeceras ={"envio", "linea","Fecha envio", "Cliente","Dirección","Transp./Comic.","Nro. factura","Bultos","Código"};
        boolean[] editables ={false,false,false,false,false,false,false,false,true};
        
        GenericoTableModel aTableModel = new GenericoTableModel();
        aTableModel.setCabeceras(cabeceras);
        aTableModel.setEditables(editables);
        this.tblEnvios.setModel(aTableModel);  
        this.tblEnvios.getColumnModel().getColumn(0).setMaxWidth(0);
        this.tblEnvios.getColumnModel().getColumn(0).setMinWidth(0);
        this.tblEnvios.getColumnModel().getColumn(0).setPreferredWidth(0);        
        this.tblEnvios.getColumnModel().getColumn(1).setMaxWidth(0);
        this.tblEnvios.getColumnModel().getColumn(1).setMinWidth(0);
        this.tblEnvios.getColumnModel().getColumn(1).setPreferredWidth(0);
        
        //        presenter = new JEtiquetasPresenter(this);
        this.presenter = new JEtiquetasPresenter(this);
        
        //String fecha = GregorianCalendar.getInstance().get(GregorianCalendar.DATE)+ "/" + GregorianCalendar.getInstance().get(GregorianCalendar.MONTH)  + "/" + GregorianCalendar.getInstance().get(GregorianCalendar.YEAR);
        
        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();  
        //obtenemos el tamaño de la ventana  
        Dimension ventana = this.getSize();  
        //para cntrar la ventana lo hacemos con el siguiente calculo  
        this.setLocation((pantalla.width - ventana.width) / 2, (pantalla.height - ventana.height) / 2);  
        
        
        SimpleDateFormat formatea = new SimpleDateFormat("dd/MM/yyyy");
        this.txtFecha.setText(formatea.format(GregorianCalendar.getInstance().getTime()));
        this.txtCliente.requestFocus();
    }
    

    public JTable getTblEnvios() {
        return tblEnvios;
    }

    public Date getFechaBusqueda() {
        return fechaBusqueda;
    }
     public JTextField getTxtFecha() {
        return txtFecha;
    }

    public JTextField getTxtRazonSocial() {
        return txtRazonSocial;
    }

    public JTable getTblPedidos() {
        return tblEnvios;
    }

    public JTextField getTxtCliente() {
        return txtCliente;
    }
    

      /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtCliente = new javax.swing.JTextField();
        cmdBuscar = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        txtRazonSocial = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEnvios = new javax.swing.JTable();
        cmdCancelar = new javax.swing.JButton();
        cmdEnviar = new javax.swing.JButton();
        cmdSalir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setName("IMPETI"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Busqueda de Envíos"));

        txtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteActionPerformed(evt);
            }
        });

        cmdBuscar.setText("Buscar");
        cmdBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBuscarActionPerformed(evt);
            }
        });
        cmdBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cmdBuscarKeyTyped(evt);
            }
        });

        jCheckBox1.setText("Incluir pedidos con etiquetas impresas");

        jLabel1.setText("Fecha:");

        jLabel2.setText("Cliente:");

        txtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaActionPerformed(evt);
            }
        });

        txtRazonSocial.setBackground(new java.awt.Color(255, 255, 204));
        txtRazonSocial.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBox1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmdBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblEnvios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblEnvios.setRowHeight(20);
        jScrollPane1.setViewportView(tblEnvios);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmdCancelar.setText("Cancelar");
        cmdCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelarActionPerformed(evt);
            }
        });

        cmdEnviar.setText("Enviar");
        cmdEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEnviarActionPerformed(evt);
            }
        });

        cmdSalir.setText("Salir");
        cmdSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cmdCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(cmdEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(cmdSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdSalir)
                    .addComponent(cmdCancelar)
                    .addComponent(cmdEnviar))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteActionPerformed
        this.txtRazonSocial.setText("");
        if(this.txtCliente.getText().trim().length()> 0){
            presenter.getBuscarClienteHandler().stateChanged(new ChangeEvent(this));             
        }
        this.cmdBuscar.requestFocus();
        
    }    
        // TODO add your handling code here:         this.txtRazonSocial.setText("");         if (this.txtCliente.getText().length() > 0) {             presenter.getBuscarClienteHandler().stateChanged(new ChangeEvent(this));         }         this.cmdBuscar.requestFocus();      }//GEN-LAST:event_txtClienteActionPerformed

        private void cmdBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBuscarActionPerformed
            GenericoTableModel aModel= (GenericoTableModel) this.tblEnvios.getModel();
            aModel.limpiar();  
            this.tblEnvios.addNotify();
            if(txtFecha.getText().trim().length()> 0){
                SimpleDateFormat formateador = new SimpleDateFormat("dd/MM/yyyy");
                try
                {
                    fechaBusqueda = formateador.parse(txtFecha.getText());
                }
                catch (Exception e)
                {
                    Icon Icon=null;
                    JOptionPane.showMessageDialog(this, "La fecha no posee formato correcto", "Envios", JOptionPane.ERROR_MESSAGE,   Icon);
                }
            }

            presenter.getBuscarEnvioHandler().stateChanged(new ChangeEvent(this));      
       
        }        
        // TODO add your handling code here:         GenericoTableModel aModel = (GenericoTableModel) this.tblEnvios.getModel();         aModel.limpiar();         if (txtFecha.getText().length() > 0) {             SimpleDateFormat formateador = new SimpleDateFormat("dd/MM/yyyy");             try {                 fechaBusqueda = formateador.parse(txtFecha.getText());             } catch (Exception e) {                 Icon Icon = null;                 JOptionPane.showMessageDialog(this, "La fecha no posee formato correcto", "Envios", JOptionPane.ERROR_MESSAGE, Icon);             }         }          presenter.getBuscarEnvioHandler().stateChanged(new ChangeEvent(this));     }//GEN-LAST:event_cmdBuscarActionPerformed

        private void cmdBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdBuscarKeyTyped
            java.awt.event.ActionEvent evt2 = null;
            this.cmdBuscarActionPerformed(evt2);
        }    
        // TODO add your handling code here:         java.awt.event.ActionEvent evt2 = null;         this.cmdBuscarActionPerformed(evt2);     }//GEN-LAST:event_cmdBuscarKeyTyped

        private void txtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaActionPerformed

            this.txtCliente.requestFocus();
        }    
        // TODO add your handling code here:     }//GEN-LAST:event_txtFechaActionPerformed

        private void cmdCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelarActionPerformed
            presenter.getCancelarImpresionHandler().stateChanged(new ChangeEvent(this));
            this.txtCliente.setText("");
            this.txtRazonSocial.setText("");
                    
            SimpleDateFormat formatea = new SimpleDateFormat("dd/MM/yyyy");
            this.txtFecha.setText(formatea.format(GregorianCalendar.getInstance().getTime()));
                    
            GenericoTableModel aModel= (GenericoTableModel) this.tblEnvios.getModel();
            aModel.limpiar();   
            this.tblEnvios.addNotify();
            this.txtCliente.requestFocus();
        }    
        // TODO add your handling code here:         presenter.getCancelarImpresionHandler().stateChanged(new ChangeEvent(this));         this.txtCliente.setText("");         this.txtRazonSocial.setText("");          SimpleDateFormat formatea = new SimpleDateFormat("dd/MM/yyyy");         this.txtFecha.setText(formatea.format(GregorianCalendar.getInstance().getTime()));          GenericoTableModel aModel = (GenericoTableModel) this.tblEnvios.getModel();         aModel.limpiar();         this.tblEnvios.addNotify();         this.txtCliente.requestFocus();     }//GEN-LAST:event_cmdCancelarActionPerformed

        private void cmdEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEnviarActionPerformed
            Icon Icon = null;
            java.awt.event.ActionEvent evt2 = null;
            int rows = this.tblEnvios.getModel().getRowCount();
            if(rows ==0 || this.tblEnvios.getSelectedRow()== -1){
                JOptionPane.showMessageDialog(this, "Debe seleccionar/buscar al menos un envío", "Envios", JOptionPane.INFORMATION_MESSAGE,   Icon);
            }else{
                
                presenter.getEnviarImpresionHandler().stateChanged(new ChangeEvent(this));
                this.cmdCancelarActionPerformed(evt2);
                JOptionPane.showMessageDialog(this, "Los envios fueron enviados a impresora", "Envios", JOptionPane.INFORMATION_MESSAGE,   Icon);
            }
        }    
        // TODO add your handling code here:         java.awt.event.ActionEvent evt2 = null;         presenter.getEnviarImpresionHandler().stateChanged(new ChangeEvent(this));         this.cmdCancelarActionPerformed(evt2);         Icon Icon = null;         JOptionPane.showMessageDialog(this, "Los envios fueron enviados a impresora", "Envios", JOptionPane.INFORMATION_MESSAGE, Icon);     }//GEN-LAST:event_cmdEnviarActionPerformed

        private void cmdSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSalirActionPerformed
            this.dispose();
        }    
    
    void notificarException(Exception ex) {
      Icon Icon = null;
      JOptionPane.showMessageDialog(this,ex.toString(), "Envios", JOptionPane.ERROR_MESSAGE,   Icon);  
    }
        // TODO add your handling code here:         this.dispose();     }//GEN-LAST:event_cmdSalirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdBuscar;
    private javax.swing.JButton cmdCancelar;
    private javax.swing.JButton cmdEnviar;
    private javax.swing.JButton cmdSalir;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEnvios;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtRazonSocial;
    // End of variables declaration//GEN-END:variables

    void notificarFinBusqueda() {
        Icon Icon = null;
        if(this.tblEnvios.getModel().getRowCount()==0){
            JOptionPane.showMessageDialog(this, "No se hán encontrado envíos con los filtros informados", "Envios", JOptionPane.INFORMATION_MESSAGE,   Icon);  
        }
        
    }
}
